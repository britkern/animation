import { GitHubLogoIcon, TwitterLogoIcon } from "@radix-ui/react-icons";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Link from "next/link";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const Layout = ({ children }: { children: React.ReactNode }) => {
  return (
    <div className="relative mx-auto h-screen w-full max-w-7xl px-6 md:px-8 lg:px-12">
      <header className="flex items-center justify-between py-8">
        <Link href="/">
          <span>animation.ibelick</span>
        </Link>
        <nav className="flex gap-6">
          <a
            href="https://twitter.com/Ibelick"
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex"
          >
            <TwitterLogoIcon className="h-6 w-6 text-neutral-800 transition-colors hover:text-neutral-600 dark:text-neutral-200 dark:hover:text-neutral-400" />
          </a>
          <a
            href="https://github.com/ibelick/animation"
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex"
          >
            <GitHubLogoIcon className="h-6 w-6 text-neutral-800 transition-colors hover:text-neutral-600 dark:text-neutral-200 dark:hover:text-neutral-400" />
          </a>
        </nav>
      </header>
      <main>{children}</main>
      <footer>
        <div className="flex items-center justify-center py-8">
          <span className="text-sm text-neutral-800 dark:text-neutral-200">
            Made by
            <a
              href="https://twitter.com/Ibelick"
              target="_blank"
              rel="noopener noreferrer"
              className="ml-1 text-neutral-950 dark:text-neutral-100"
            >
              @Ibelick
            </a>
          </span>
        </div>
      </footer>
    </div>
  );
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Layout>{children}</Layout>
      </body>
    </html>
  );
}
